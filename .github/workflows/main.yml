#on: [push, pull_request]
#
#name: Continuous integration
#
#jobs:
#  check:
#    name: Check
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        rust:
#          - stable
#          - 1.64
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: ${{ matrix.rust }}
#          override: true
#      - uses: actions-rs/cargo@v1
#        with:
#          command: check
#
#  test:
#    name: Test Suite
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        rust:
#          - stable
#          - 1.64
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: ${{ matrix.rust }}
#          override: true
#      - uses: actions-rs/cargo@v1
#        with:
#          command: test
#
#  fmt:
#    name: Rustfmt
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        rust:
#          - stable
#          - 1.31.0
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: ${{ matrix.rust }}
#          override: true
#      - run: rustup component add rustfmt
#      - uses: actions-rs/cargo@v1
#        with:
#          command: fmt
#          args: --all -- --check
#
#  clippy:
#    name: Clippy
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        rust:
#          - stable
#          - 1.31.0
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: ${{ matrix.rust }}
#          override: true
#      - run: rustup component add clippy
#      - uses: actions-rs/cargo@v1
#        with:
#          command: clippy
#          args: -- -D warnings



#name: CI to Docker Hub
#
#on:
#  push:
#    branches: [main]
#
#jobs:
#
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Set up Docker Buildx
#        id: buildx
#        uses: docker/setup-buildx-action@v1
##      - name: Cache Docker layers
##        uses: actions/cache@v2
##        with:
##          path: /tmp/.buildx-cache
##          key: ${{ runner.os }}-buildx-${{ github.sha }}
##          restore-keys: |
##            ${{ runner.os }}-buildx-
#      - uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#      - name: Build and push
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          context: ./
#          file: ./Dockerfile
#          builder: ${{ steps.buildx.outputs.name }}
#          push: true
#          tags: thebigg1/rsty_physics:latest
##          cache-from: type=local,src=/tmp/.buildx-cache
##          cache-to: type=local,dest=/tmp/.buildx-cache
#      - name: Image digest
#        run: echo ${{ steps.docker_build.outputs.digest }}
#
#      - name: Deploy
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          password: ${{ secrets.PASSWORD }}
#          script: make run_app
#
#
#
